#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'shared_types'

module SharedService
  class Client
    include ::Thrift::Client

    def getStruct(key)
      send_getStruct(key)
      return recv_getStruct()
    end

    def send_getStruct(key)
      send_message('getStruct', GetStruct_args, :key => key)
    end

    def recv_getStruct()
      result = receive_message(GetStruct_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'getStruct failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_getStruct(seqid, iprot, oprot)
      args = read_args(iprot, GetStruct_args)
      result = GetStruct_result.new()
      result.success = @handler.getStruct(args.key)
      write_result(result, oprot, 'getStruct', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class GetStruct_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    KEY = 1

    FIELDS = {
      KEY => {:type => ::Thrift::Types::I32, :name => 'key'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class GetStruct_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => SharedStruct}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

